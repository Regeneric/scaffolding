x-default_config: &default_config
  network_mode: host
  restart: always
  env_file: ${ENV_FILE}

services:
  dns:
    hostname: dns1
    container_name: dns
    image: docker.io/ubuntu/bind9:latest
    volumes:
      - ${BIND_CONF_LOCATION}/db.${DOMAIN_NAME}:/var/cache/bind/db.${DOMAIN_NAME}
      - ${BIND_CONF_LOCATION}/named.conf:/etc/bind/named.conf
      - ${BIND_CONF_LOCATION}/named.conf.access_network:/etc/bind/named.conf.access_network
      - ${BIND_CONF_LOCATION}/named.conf.options:/etc/bind/named.conf.options
    <<: *default_config
  reverse_proxy:
    hostname: nginx1
    container_name: reverse_proxy
    image: docker.io/nginx:latest
    volumes:
      - ${NGINX_CONF_LOCATION}/nginx.conf:/etc/nginx/nginx.conf
      - ${NGINX_CONF_LOCATION}/sites:/etc/nginx/sites-enabled
      - ${NGINX_CONF_LOCATION}/ssl/${DOMAIN_NAME}.crt:/etc/ssl/certs/${DOMAIN_NAME}.crt
      - ${NGINX_CONF_LOCATION}/ssl/${DOMAIN_NAME}.key:/etc/ssl/private/${DOMAIN_NAME}.key
    command: ['nginx', '-g daemon off;']
    <<: *default_config
  mongodb:
    hostname: mongo1
    container_name: mongodb
    image: docker.io/percona/percona-server-mongodb:6.0.14
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASS}
    volumes:
      - ${CONFIG_FOLDER}/nosql/mongodb/data:/data/db
      - ${CONFIG_FOLDER}/nosql/mongodb/mongod.conf:/data/db/mongod.conf
      - ${CONFIG_FOLDER}/nosql/mongodb/keyFile:/data/db/keyFile
      - ${CONFIG_FOLDER}/nosql/mongodb/backup:/mongo_backup
    command: ["mongod", "--bind_ip", "127.0.0.1,${INTERNAL_IP}", "--port", "${MONGO_PORT}", "--directoryperdb", "--wiredTigerCacheSizeGB", "1", "--journal", "--keyFile=/data/db/keyFile"]
    <<: *default_config
  keydb:
    hostname: keydb1
    container_name: keydb
    image: docker.io/eqalpha/keydb:latest
    restart: always
    env_file: ${ENV_FILE}
    ports:
      - ${INTERNAL_IP}:${REDIS_PORT}:${REDIS_PORT}
    volumes: 
      - ${CONFIG_FOLDER}/nosql/keydb/keydb.conf:/etc/keydb/keydb.conf
      - ${CONFIG_FOLDER}/nosql/keydb/data:/data
      - ${CONFIG_FOLDER}/nosql/keydb/backup:/redis_backup
    command: keydb-server /etc/keydb/keydb.conf
  mariadb:
    hostname: mariadb1
    container_name: mariadb
    image: docker.io/mariadb:latest
    restart: always
    env_file: ${ENV_FILE}
    ports:
      - ${INTERNAL_IP}:${SQL_PORT}:${SQL_PORT}
    environment:
      MYSQL_ROOT_PASSWORD: ${SQL_ROOT_PASS}
    volumes:
      - ${CONFIG_FOLDER}/sql/mariadb:/docker-entrypoint-initdb.d
      - ${CONFIG_FOLDER}/sql/mariadb/data:/var/lib/mysql
      - ${CONFIG_FOLDER}/sql/mariadb/backup:/maria_backup
    command: [ '--max_connections=10000' ]
  mysql:
    hostname: mysql1
    container_name: mysql
    image: docker.io/mysql:latest
    restart: always
    env_file: ${ENV_FILE}
    ports:
      - ${INTERNAL_IP}:${SQL_PORT}:${SQL_PORT}
    environment:
      MYSQL_ROOT_PASSWORD: ${SQL_ROOT_PASS}
    volumes:
      - ${CONFIG_FOLDER}/sql/mysql:/docker-entrypoint-initdb.d
      - ${CONFIG_FOLDER}/sql/mysql/data:/var/lib/mysql
      - ${CONFIG_FOLDER}/sql/mysql/backup:/maria_backup
    command: [ '--max_connections=10000' ]
  rabbitmq:
    hostname: rabbitmq1
    container_name: rabbitmq
    image: docker.io/rabbitmq:3-management
    restart: always
    env_file: ${ENV_FILE}
    ports:
      - ${INTERNAL_IP}:5672:5672
      - ${INTERNAL_IP}:15672:15672
      - ${INTERNAL_IP}:15692:15692
    environment:
      RABBITMQ_LOG: debug,+color
    ulimits:
      nofile:
        soft: 2000
        hard: 2000
